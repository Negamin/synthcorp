{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Whoami\\\\Desktop\\\\synthcorp\\\\src\\\\admin\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Contexto de autenticação\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider do contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Verificar se há um usuário logado no localStorage ao iniciar\n  useEffect(() => {\n    const user = localStorage.getItem('adminUser');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  // Função de login\n  const login = (email, password) => {\n    // Credenciais fixas para demonstração\n    if (email === 'admin@synthcorp.com' && password === 'admin123') {\n      const user = {\n        email,\n        name: 'Administrador',\n        role: 'admin'\n      };\n      localStorage.setItem('adminUser', JSON.stringify(user));\n      setCurrentUser(user);\n      return Promise.resolve(user);\n    }\n    return Promise.reject(new Error('Credenciais inválidas'));\n  };\n\n  // Função de logout\n  const logout = () => {\n    localStorage.removeItem('adminUser');\n    setCurrentUser(null);\n    return Promise.resolve();\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar o contexto\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","user","localStorage","getItem","JSON","parse","login","email","password","name","role","setItem","stringify","Promise","resolve","reject","Error","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Whoami/Desktop/synthcorp/src/admin/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Contexto de autenticação\r\nconst AuthContext = createContext();\r\n\r\n// Provider do contexto\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Verificar se há um usuário logado no localStorage ao iniciar\r\n  useEffect(() => {\r\n    const user = localStorage.getItem('adminUser');\r\n    if (user) {\r\n      setCurrentUser(JSON.parse(user));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Função de login\r\n  const login = (email, password) => {\r\n    // Credenciais fixas para demonstração\r\n    if (email === 'admin@synthcorp.com' && password === 'admin123') {\r\n      const user = { email, name: 'Administrador', role: 'admin' };\r\n      localStorage.setItem('adminUser', JSON.stringify(user));\r\n      setCurrentUser(user);\r\n      return Promise.resolve(user);\r\n    }\r\n    return Promise.reject(new Error('Credenciais inválidas'));\r\n  };\r\n\r\n  // Função de logout\r\n  const logout = () => {\r\n    localStorage.removeItem('adminUser');\r\n    setCurrentUser(null);\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook personalizado para usar o contexto\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC9C,IAAIF,IAAI,EAAE;MACRH,cAAc,CAACM,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;IAClC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC;IACA,IAAID,KAAK,KAAK,qBAAqB,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAC9D,MAAMP,IAAI,GAAG;QAAEM,KAAK;QAAEE,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAQ,CAAC;MAC5DR,YAAY,CAACS,OAAO,CAAC,WAAW,EAAEP,IAAI,CAACQ,SAAS,CAACX,IAAI,CAAC,CAAC;MACvDH,cAAc,CAACG,IAAI,CAAC;MACpB,OAAOY,OAAO,CAACC,OAAO,CAACb,IAAI,CAAC;IAC9B;IACA,OAAOY,OAAO,CAACE,MAAM,CAAC,IAAIC,KAAK,CAAC,uBAAuB,CAAC,CAAC;EAC3D,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBf,YAAY,CAACgB,UAAU,CAAC,WAAW,CAAC;IACpCpB,cAAc,CAAC,IAAI,CAAC;IACpB,OAAOe,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMK,KAAK,GAAG;IACZtB,WAAW;IACXS,KAAK;IACLW,MAAM;IACNlB;EACF,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAxB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;;AAED;AAAA5B,EAAA,CA9CaF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA+CzB,OAAO,MAAMgC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOrC,UAAU,CAACG,WAAW,CAAC;AAChC,CAAC;AAACkC,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}